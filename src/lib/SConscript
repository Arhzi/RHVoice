import os.path
Import(["env","lib_objects"])
local_env=env.Clone()
local_env.Append(CPPPATH=os.path.join("..","hts_engine_api","include"))
if "gcc" in local_env["TOOLS"] or "mingw" in local_env["TOOLS"]:
    local_env.Append(CPPFLAGS="-finput-charset=UTF-8")
    local_env.Append(CFLAGS="-Wno-unused-function")
if os.path.sep=="\\":
    local_env.Append(CPPDEFINES=("path_sep",(r'\"\\\%s\"' % os.path.sep)))
else:
    local_env.Append(CPPDEFINES=("path_sep",(r'\"\%s\"' % os.path.sep)))
local_env.Append(CPPDEFINES=("SONIC_USE_SIN",1))
local_env.Append(CPPDEFINES=("AUDIO_PLAY_NONE","1"))
lib_name="RHVoice"
src=Glob("*.c")
if env["PLATFORM"]=="win32":
    objects=local_env.SharedObject(src)
else:
    objects=local_env.StaticObject(src)
lib_objects.extend(objects)
if env["PLATFORM"]=="win32":
    dll=local_env.SharedLibrary(lib_name,lib_objects+["lib.def"])
    local_env.Install(os.path.join("..","install"),dll)
    Import("sapi_env")
    if sapi_env["enabled"]:
        if sapi_env["TARGET_ARCH"].endswith("64"):
            machine="x64"
        else:
            machine="x86"
        sapi_env.Command(os.path.join("..","sapi",lib_name+".lib"),["lib.def",dll],"lib /machine:$MACHINE /def:${SOURCES[0]} /out:$TARGET",MACHINE=machine)
        sapi_env.Prepend(LIBS=lib_name)
else:
    local_env.StaticLibrary(lib_name,lib_objects)
